from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, ContextTypes
import asyncio
import nest_asyncio

nest_asyncio.apply()

TOKEN = "7892363140:AAEdC_aZM03Gvc_Gp3Oj8zHJq_Rt1dXjCUw"

# ======= –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ =======
async def button_click(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if query.data == "about":
        await query.message.reply_text("–Ø –ø—Ä–æ—Å—Ç–æ–π Telegram-–±–æ—Ç —Å –º–µ–Ω—é üòä")
    elif query.data == "help":
        await query.message.reply_text("–ü–æ–∫–∞ —è —É–º–µ—é —Ç–æ–ª—å–∫–æ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –∫–Ω–æ–ø–∫–∏ üòÑ")
    elif query.data == "contact":
        await query.message.reply_text("–°–≤—è–∑–∞—Ç—å—Å—è —Å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º: @your_username")
    else:
        await query.message.reply_text("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ üòÖ")

# ======= –ö–æ–º–∞–Ω–¥–∞ /start =======
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("‚ÑπÔ∏è –û –±–æ—Ç–µ", callback_data="about")],
        [InlineKeyboardButton("üí¨ –ü–æ–º–æ—â—å", callback_data="help")],
        [InlineKeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã", callback_data="contact")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=reply_markup)

# ======= –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è =======
async def main():
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω ‚úÖ")
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(button_click))

    await app.run_polling()

# ======= –ó–∞–ø—É—Å–∫ =======
if __name__ == "__main__":
    asyncio.get_event_loop().run_until_complete(main())